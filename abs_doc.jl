# Auto-generated by: docwrite(abs,"Takes the absolute value","x can be integer, float, complex, matrix or array and many more","a positive number or array of the same type, i.e. the abs(float) will return a float","http://docs.julialang.org/en/latest/stdlib/base/?highlight=abs#Base.abs","http://mathworld.wolfram.com/AbsoluteValue.html","norm Int Float64 Complex","x=2","abs(x)","println(abs(x))","y=-3","abs(y)","println(abs(y))","z=-4.9384","abs(z)","println(abs(z))","t=3+4im","println(abs(t))","println(abs([x,y,z,t]))")
println("")
 println("Takes the absolute value")
 println("")
print_with_color(:white,"Input : ")
 println("x can be integer, float, complex, matrix or array and many more")
print_with_color(:white,"Output: ")
 println("a positive number or array of the same type, i.e. the abs(float) will return a float")
 println("")
print("Julia specific help is located here online: ")
print_with_color(:magenta,"http://docs.julialang.org/en/latest/stdlib/base/?highlight=abs#Base.abs
")
print("A good source of information about this is: ")
print_with_color(:magenta,"http://mathworld.wolfram.com/AbsoluteValue.html
")
println("")
 print_with_color(:white,"See Also: ")
print_with_color(:black,"norm Int Float64 Complex
")
println("")
 print_with_color(:white,"Source Code: ")
println("to see where the source code is located call the function methods(abs) ")
println("")
 print_with_color(:white,"Examples:

")
print_with_color(:green,"julia> ") ; println("x=2")
x=2
print_with_color(:green,"julia> ") ; println("abs(x)")
abs(x)
print_with_color(:green,"julia> ") ; println("println(abs(x))")
println(abs(x))
print_with_color(:green,"julia> ") ; println("y=-3")
y=-3
print_with_color(:green,"julia> ") ; println("abs(y)")
abs(y)
print_with_color(:green,"julia> ") ; println("println(abs(y))")
println(abs(y))
print_with_color(:green,"julia> ") ; println("z=-4.9384")
z=-4.9384
print_with_color(:green,"julia> ") ; println("abs(z)")
abs(z)
print_with_color(:green,"julia> ") ; println("println(abs(z))")
println(abs(z))
print_with_color(:green,"julia> ") ; println("t=3+4im")
t=3+4im
print_with_color(:green,"julia> ") ; println("println(abs(t))")
println(abs(t))
print_with_color(:green,"julia> ") ; println("println(abs([x,y,z,t]))")
println(abs([x,y,z,t]))

